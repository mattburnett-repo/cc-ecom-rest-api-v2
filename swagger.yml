swagger: "2.0"

info:
  description: "Generic endpoints for an e-commerce REST API"
  version: "1.0.0"
  title: "E-commerce REST API"

schemes: 
  - http
  - https

host: https://e-commerce-rest-api-v2.herokuapp.com/

tags:
- name: "cart"
  description: "User cart endpoint"
- name: "login"
  description: "Login endpoint"
- name: "order"
  description: "Order endpoint"
- name: "product"
  description: "Product endpoint"
- name: "register"
  description: "Register endpoint"
- name: "user"
  description: "User endpoint"

paths:
  /cart:
    get:
      tags: 
      - "cart"
      summary: "Get all carts"
      description: "Get all carts without an order date"
      produces:
        - "application/json"
      parameters:
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        204:
          description: 204 No Content
          schema:
            type: 
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
    post:
      tags: 
      - "cart"
      summary: "Create a cart"
      description: "Create a new cart for a user"
      produces:
        - "application/json"
      parameters:
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
  /cart/{cartID}:
    get:
      tags: 
        - "cart"
      summary: "Get a cart by id"
      description: "Get a cart by cart id"
      produces:
        - "application/json"
      parameters:
        - name: "cartID"
          in: "path"
          description: "ID of cart"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        204:
          description: 204 No Content
          schema:
            type: 
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
    post:
      tags: 
      - "cart"
      summary: "Add item to a cart"
      description: "Add an item to an existing cart"
      produces:
        - "application/json"
      parameters:
        - name: "cartID"
          in: "path"
          description: "ID of cart"
          required: true
          type: "integer"
          format: "int64"
        - name: "cart_item_id"
          in: "formData"
          description: "ID of item to be added"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
    put:
      tags: 
      - "cart"
      summary: "Update a cart item"
      description: "Update a cart item's quantity and line item price"
      produces:
        - "application/json"
      parameters:
        - name: "cartID"
          in: "path"
          description: "ID of cart"
          required: true
          type: "integer"
          format: "int64"
        - name: "cart_id_id"
          in: "formData"
          description: "ID of item to update"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        204:
          description: 204 No content
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
    delete:
      tags: 
      - "cart"
      summary: "Delete a cart item"
      description: "Delete a cart item"
      produces:
        - "application/json"
      parameters: 
        - name: "cartID"
          in: "path"
          description: "ID of cart"
          required: true
          type: "integer"
          format: "int64"
        - name: "cart_item_id"
          in: "formData"
          description: "ID of cart"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
  /login:
    get:
      tags: 
      - "login"
      summary: "Show default page"
      description: "Show login page"
      produces:
        - "application/json"
      parameters: none
    post:
      tags: 
      - "login"
      summary: "Login"
      description: "Log in a user with provided username/password and auth via passport"
      produces:
        - "application/json"
      parameters: 
        - name: "username"
          in: "formData"
          description: "User name"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          description: "Password"
          required: true
          type: "string"
  /order:
    get:
      tags: 
      - "order"
      summary: "Get orders"
      description: "Get all orders in the database"
      produces:
        - "application/json"
      parameters: none
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
  /order/{orderID}:
    get:
      tags: 
      - "order"
      summary: "Get order by id"
      description: "Get an order by id"
      produces:
        - "application/json"
      parameters:
        - name: "orderID"
          in: "path"
          description: "ID of order"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
    post:
      tags: 
      - "order"
      summary: "Create an order"
      description: "Create an order from a user's cart"
      produces:
        - "application/json"
      parameters: cart_id, user_id
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
    delete:
      tags: 
      - "order"
      summary: "Delete order"
      description: "Delete an order by id"
      produces:
        - "application/json"
      parameters:
        - name: "orderID"
          in: "formData"
          description: "ID of order"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: 204 No content
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
  /product:
    get:
      tags: 
      - "product"
      summary: "Get product"
      description: "Get all products in the database"
      produces:
        - "application/json"
      parameters: none
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
  /product/{productID}:
    get:
      tags: 
      - "product"
      summary: "Get order"
      description: "Get an order by id"
      produces:
        - "application/json"
      parameters:
        - name: "productID"
          in: "path"
          description: "ID of product"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
    post:
      tags: 
      - "product"
      summary: "Add a product"
      description: "Add a product to the database"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "formData"
          description: "Name of product"
          required: true
          type: "string"
        - name: "description"
          in: "formData"
          description: "Desctiption of product"
          required: true
          type: "string"
        - name: "price"
          in: "formData"
          description: "Price of product"
          required: true
          type: "float"
      responses:
        201:
          description: 201 Created
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
    put:
      tags: 
      - "product"
      summary: "Update"
      description: "Update a product's name / description / price"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "formData"
          description: "Product id"
          required: true
          type: "integer"
          format: "int64"
        - name: "name"
          in: "formData"
          description: "Name of product"
          required: false
          type: "string"
        - name: "description"
          in: "formData"
          description: "Desctiption of product"
          required: false
          type: "string"
        - name: "price"
          in: "path"
          description: "Price of product"
          required: false
          type: "decimal"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        204:
          description: 204 No content
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
    delete:
      tags: 
      - "product"
      summary: "Delete product"
      description: "Delete product from the database"
      produces:
        - "application/json"
      parameters: 
        - name: "productID"
          in: "formData"
          description: "ID of product"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: 204 No content
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: 
            items:
  /register:
    get:
      tags: 
      - "register"
      summary: "Get"
      description: "Displays register form page"
      produces:
        - "application/json"
      parameters: 
      responses:
    post:
      tags: 
      - "register"
      summary: "Add user"
      description: "Adds user to database"
      produces:
        - "application/json"
      parameters: 
      responses:
  /user:
    get:
      tags: 
      - "user"
      summary: "Get users"
      description: "Get all users from the database"
      produces:
        - "application/json"
      parameters:
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
    post:
      tags: 
      - "user"
      summary: "Create a user"
      description: "Add a user record to the database"
      produces:
        - "application/json"
      parameters: id
      responses:
        201:
          description: 201 Created
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
    put:
      tags: 
      - "user"
      summary: "Update a user"
      description: "Update a user record in the database"
      produces:
        - "application/json"
      parameters:
        - name: "userID"
          in: "path"
          description: "ID of user"
          required: true
          type: "integer"
          format: "int64"
        - name: "username"
          in: "formData"
          description: "usenrame of user"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          description: "password of user"
          required: true
          type: "string"
      responses:
        200:
          description: 200 Sucess
          schema:
            type: object
            items:
        204:
          description: 204 No content
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
    delete:
      tags: 
      - "user"
      summary: "Delete a user"
      description: "Delete a user record from the database"
      produces:
        - "application/json"
      parameters:
        - name: "userID"
          in: "path"
          description: "ID of user"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Sucess
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items:
  /user/{userID}:
    get:
      tags: 
      - "user"
      summary: "Get a user"
      description: "Get a user record from the database"
      produces:
        - "application/json"
      parameters: 
        - name: "userID"
          in: "path"
          description: "ID of user"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        400:
          description: 400 Bad request
          schema:
            type: object
            items: